head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	96.07.17.23.12.40;	author bart;	state Exp;
branches;
next	1.2;

1.2
date	96.07.17.21.35.53;	author bart;	state Exp;
branches;
next	1.1;

1.1
date	96.07.17.02.05.43;	author bart;	state Exp;
branches;
next	;


desc
@soundness check for blocks
@


1.3
log
@restructured move()
fixed copy_state() bug
@
text
@#include "blocks.h"

static int cheap_move(struct state *s, int block, int to) {
  int i;
  int t_from, t_to, from;

  for (i = 0; i < s->n_towers; i++)
    if (s->tower_tops[i] == block)
      break;
  if (i >= s->n_towers)
    return 0;
  t_from = i;
  if (to > -1) {
    for (i = 0; i < s->n_towers; i++)
      if (s->tower_tops[i] == to)
	break;
    if (i >= s->n_towers)
      return 0;
    t_to = i;
  } else
    t_to = -1;
  from = s->blocks[block].on;
  if (from > -1) {
    if (s->tower_bottoms[t_from] == block)
      s->tower_bottoms[t_from] = from;
    s->tower_tops[t_from] = from;
  } else {
    --s->n_towers;
    s->tower_tops[t_from] = s->tower_tops[s->n_towers];
    s->tower_bottoms[t_from] = s->tower_bottoms[s->n_towers];
    if (t_to == s->n_towers)
      t_to = t_from;
  }
  if (t_to == -1) {
    t_to = s->n_towers++;
    s->tower_bottoms[t_to] = -1;
  }
  if (goal->blocks[block].on == to && s->tower_bottoms[t_to] == to)
    s->tower_bottoms[t_to] = block;
  s->tower_tops[t_to] = block;
  s->blocks[block].on = to;
  if (verbose > 2) {
    printf("moved %d to %d\n", block, to);
    write_picture(s);
  }
  return 1;
}

void check_soln(int n_soln, int (*soln)[2]) {
  int i;
  struct state *s = clone_state(saved_start);
  
  for (i = 0; i < n_soln; i++)
    if (!cheap_move(s, soln[i][0], soln[i][1])) {
      printf("move %d to %d invalid!\n", soln[i][0], soln[i][1]);
      write_picture(s);
      exit(1);
    }
  hash_state(s);
  if (!same_state(s, goal)) {
    printf("solution does not achieve goal!\n");
    write_picture(s);
    printf("\n");
    write_picture(goal);
    exit(1);
  }
}
@


1.2
log
@give detailed solution report at reasonable verbosity
@
text
@d23 3
a25 1
  if (from > -1)
d27 4
a30 2
  else {
    s->tower_tops[t_from] = s->tower_tops[--s->n_towers];
d34 1
a34 1
  if (t_to == -1)
d36 4
d51 1
a51 1
  struct state *s = copy_state(saved_start);
@


1.1
log
@Initial revision
@
text
@d34 4
a37 4
#if 0
  printf("moved %d to %d\n", block, to);
  write_picture(s);
#endif
@
